{"version":3,"sources":["../../source/renderer/components.js"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;IAMa,Q,WAAA,Q;;;;;;;;;;;sCAUO;AAChB,aAAO;AACL,kBAAU,KAAK,KAAL,CAAW;AADhB,OAAP;AAGD;;;6BAEQ;AACP,aAAO,KAAK,KAAL,CAAW,QAAlB;AACD;;;;;;AAlBU,Q,CACJ,S,GAAY;AACjB,YAAU,iBAAU,OAAV,CAAkB,UADX;AAEjB,YAAU,iBAAU,KAAV,CAAgB;AAFT,C;AADR,Q,CAMJ,iB,GAAoB;AACzB,YAAU,iBAAU;AADK,C","file":"components.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\n\n/**\n * Wrapper to pass a list of promises through context to be appended to by children when making an async request\n * @promises - reference to an array that will be filled with promises after render.\n */\nexport class Promises extends Component {\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n    promises: PropTypes.array.isRequired\n  };\n\n  static childContextTypes = {\n    promises: PropTypes.array\n  };\n\n  getChildContext() {\n    return {\n      promises: this.props.promises\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}"]}